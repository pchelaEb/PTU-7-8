// Задание параметров функций принадлежности
sg = 0.1; // параметр "ширины" гауссианы

// Функции принадлежности нечетких множеств
LC = @(x) exp(-((x-20)/sg)^2);
MC = @(x) exp(-((x-50)/sg)^2);
HC = @(x) exp(-((x-80)/sg)^2);

// Построение графиков функций принадлежности
x = 0:100;
plot(x, LC(x), 'r', x, MC(x), 'g', x, HC(x), 'b');
xlabel('Уровень заряда, %');
ylabel('Функция принадлежности');
title('Функции принадлежности нечетких множеств');

// Нахождение точек перехода множества MC
MC_points = fzero(@(x) MC(x)-LC(x), [0 100]);

// Вычисление нечеткого множества A
A = @(x) min(MC(x), LC(x));

// Проверка условия нормировки
if trapz(A, 0, 100) != 1
    disp('Ошибка: не выполнено условие нормировки');
end

// Расчет среднего интегрального значения заряда аккумулятора по НЧ A
numerator = quad(@(x) x*A(x), 0, 100);
denominator = quad(A, 0, 100);
mean_charge = numerator / denominator;
disp(['Среднее интегральное значение заряда аккумулятора: ' num2str(mean_charge)]);




Код начинается с задания параметров функций принадлежности и определения функций LC, MC и HC с помощью анонимных функций в Scilab. Затем строятся графики этих функций на основе набора точек от 0 до 100.

Далее находятся точки перехода между множествами MC и LC с помощью функции fzero в Scilab. Затем вычисляется нечеткое множество A, используя операцию пересечения множеств LC и MC, а также операцию минимума.

Далее выполняется проверка условия нормировки и расчет среднего интегрального значения заряда аккумулятора по НЧ A с помощью функции quad в Scilab.