Функции для задания произвольного нечеткого числа:
function y = cp(x)
    y = 1 - x^2
endfunction

function y = lin(x)
    y = 1 - x
endfunction

function v = v_tilde()
    for i = 1:length(U)
        if m -ls <= U(i) & U(i) <= m & ls > 0 then
            v(i) = lin((m - U(i))/ls)
        elseif m < U(i) & U(i) <= m + rs & rs > 0
            v(i) = cp((U(i) - m)/rs)
        else v(i) = 0
        end
    end
endfunction

////////////////////////////////////////////////////////////////////////////////

В задании не напсиано как задавать нечеткое число и не даны числа - m, ls, rs,
поэтому я решила, что можно задать:
1.просто произвольно,
2.используя любые m, ls, rs и любые функции(функции взяла из первой практической)

/////////////////////////////////////////////////////////////////////////////////
СПОСОБ 1

u = [0.2, 0.4, 0.7, 0.8, 1.0];
uStretch = u.^0.5; //возведение в степень функции принадлежности для 0<p<1
uCompress = u.^2;//возведение в степень функции принадлежности для p>1
x = (0.2:0.2:1);
plot(x, u, 'b')
plot(x, uStretch, 'r')
plot(x, uCompress, 'y')
xgrid;
legend('ũ', 'stretching(p = 0.5)', 'compression(p = 2)');

alpha = (0.1:0.1:0.9); //задаем различные альфа при 0<α<1

//открываем и выполнем функции
function res = Cut(u, a, x)
    k = 1
    for j = 1 : length(x)
        if(x(j) >= a)
            res(k) = u(j)
            k = k + 1
        end
    end
    if(k == 1)
        res = []
    end
endfunction

function y = lenAlpha(u, alpha, x)
    for i = 1 : length(alpha)
        y(i) = max(Cut(u, alpha(i), x)) - min(Cut(u, alpha(i), x)) //находим длину альфа сечения
    end
endfunction
///////////////////////////////////

//сраниваем длины одинаковых альфа сечений

lenU = lenAlpha(x, alpha, u); 
lenUStretch = lenAlpha(x, alpha, uStretch);
lenUCompress = lenAlpha(x, alpha, uCompress);

plot(alpha, lenU, 'b')
plot(alpha, lenUStretch, 'r')
plot(alpha, lenUCompress, 'y')
xlabel('α');
ylabel('Длина α-сечения');
legend('ũ', 'stretching(p = 0.5)', 'compression(p = 2)');
xgrid

СПОСОБ 2

U = (1:0.01:10);
m = 6; ls = 4; rs = 3;
//открыть и выполнить функции описанные выше
u = v_tilde();

uStretch = u.^0.5; //возведение в степень функции принадлежности для 0<p<1
uCompress = u.^2;//возведение в степень функции принадлежности для p>1
plot(U, u, 'b')
plot(U, uStretch, 'r')
plot(U, uCompress, 'y')
xgrid;
legend('ũ', 'stretching(p = 0.5)', 'compression(p = 2)');

alpha = (0.1:0.1:0.9);

//открываем и выполнем функции
function res = Cut(u, a, x)
    k = 1
    for j = 1 : length(x)
        if(x(j) >= a)
            res(k) = u(j)
            k = k + 1
        end
    end
    if(k == 1)
        res = []
    end
endfunction

function y = lenAlpha(u, alpha, x)
    for i = 1 : length(alpha)
        y(i) = max(Cut(u, alpha(i), x)) - min(Cut(u, alpha(i), x)) //находим длину альфа сечения
    end
endfunction
///////////////////////////////////

//сраниваем длины одинаковых альфа сечений

lenU = lenAlpha(U, alpha, u);
lenUStretch = lenAlpha(U, alpha, uStretch);
lenUCompress = lenAlpha(U, alpha, uCompress);

plot(alpha, lenU, 'b')
plot(alpha, lenUStretch, 'r')
plot(alpha, lenUCompress, 'y')
xlabel('α');
ylabel('Длина α-сечения');
legend('ũ', 'stretching(p = 0.5)', 'compression(p = 2)');
xgrid
/////////////////////////////////////////////////////////////////////////////////

