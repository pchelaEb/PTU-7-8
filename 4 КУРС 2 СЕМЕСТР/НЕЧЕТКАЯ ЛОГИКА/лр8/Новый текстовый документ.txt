а) Для построения нечеткого отношения ℜ1 между пациентами и симптомами можно использовать функции принадлежности для каждого симптома и пациента, заданные на интервале [0, 1]. Например, пациент P1 может иметь высокую температуру с вероятностью 0.8 и кашель с вероятностью 0.6, а пациент P2 может иметь высокую температуру с вероятностью 0.6 и боль в животе с вероятностью 0.4. Затем необходимо задать матрицу связей между пациентами и симптомами, где элемент (i, j) соответствует степени принадлежности симптома j пациенту i. Например, матрица связей для четырех пациентов и пяти симптомов может быть задана следующим образом:
// Определение функций принадлежности для симптомов
function temperature(x) // высокая температура
    return exp(-(x-38)^2/10);
endfunction

function cough(x) // кашель
    return exp(-(x-4)^2/4);
endfunction

function stomach_pain(x) // боль в животе
    return exp(-(x-5)^2/4);
endfunction

function chest_pain(x) // боль в груди
    return exp(-(x-5)^2/4);
endfunction

function nausea(x) // тошнота
    return exp(-(x-3)^2/2);
endfunction

// Определение матрицы связей
R1 = [0.8 0.6 0.3 0.2 0.1;      0.6 0.4 0.4 0.3 0.2;      0.2 0.3 0.7 0.1 0.1;      0.1 0.2 0.1 0.8 0.1];

б) Для построения нечеткого отношения ℜ2 между симптомами и диагнозами можно использовать функции принадлежности для каждого симптома и диагноза, заданные на интервале [0, 1]. Например, пищевое отравление может быть связано с болью в животе с вероятностью 0.9, а пневмония – с болью в груди с вероятностью 0.8. Затем необходимо задать матрицу связей между симптомами и диагнозами, где элемент (i, j) соответствует

Для максиминной композиции необходимо выполнить следующие действия:

Выбрать первое нечеткое отношение R1 и второе нечеткое отношение R2.
Для каждой пары элементов из R1 и R2 необходимо выполнить операцию минимума (min) между значениями принадлежности, соответствующими элементам.
Результатом операции является матрица, где каждый элемент является минимумом принадлежности пары элементов из R1 и R2.
Для max-prod композиции необходимо выполнить следующие действия:

Выбрать первое нечеткое отношение R1 и второе нечеткое отношение R2.
Для каждой пары элементов из R1 и R2 необходимо выполнить операцию произведения (умножения) значений принадлежности, соответствующих элементам.
Результатом операции является матрица, где каждый элемент является произведением принадлежности пары элементов из R1 и R2.
Для выполнения операций максиминной и max-prod композиций необходимо воспользоваться функциями "min" и "prod" соответственно, доступными в языке Scilab.

// Нечеткие отношения R1 и R2
R1 = [0.8 0.1 0.3 0.6;      0.3 0.9 0.4 0.1;      0.2 0.4 0.7 0.2;      0.7 0.2 0.1 0.9;      0.5 0.1 0.6 0.4];
R2 = [0.9 0.4 0.2 0.6;      0.2 0.7 0.8 0.3;      0.1 0.3 0.6 0.2;      0.6 0.2 0.3 0.7];

// Максиминная композиция
maxmin_comp = zeros(size(R1, 1), size(R2, 2)); // инициализация матрицы результата
for i = 1:size(R1, 1)
    for j = 1:size(R2, 2)
        min_val = inf; // начальное значение минимума
        for k = 1:size(R1, 2)
            min_val = min(min_val, min(R1(i,k), R2(k,j))); // операция минимума
        end
        maxmin_comp(i,j) = min_val; // записываем результат в матрицу
    end
end
disp("Максиминная композиция:");
disp(maxmin_comp);

// Max-prod композиция
maxprod_comp = zeros(size(R1, 1), size(R2, 2)); // инициализация матрицы результата
for i = 1:size(R1, 1)
    for j = 1:size(R2, 2)
        prod_val = 1; // начальное значение произведения
        for k = 1:size(R1, 2)
            prod_val = prod_val * R1(i,k) * R2(k,j); // операция произведения
        end
        maxprod_comp(i,j) = prod_val; // записываем результат в матрицу
    end
end
disp("Max-prod композиция:");
disp(maxprod_comp);


В этом коде мы создаем матрицы R1 и R2, которые представляют собой нечеткие отношения между пациентами и симптомами (R1) и между симптомами и диагнозами (R2). Затем мы создаем пустые матрицы для результатов максиминной и max-prod композиций, и в циклах перебираем элементы матриц R1 и R2, выполняя операции минимума и произведения и записывая результат в соответствующие матрицы результата. В конце выводим результаты на экран.


// Определяем нечеткие множества для пациентов
TP1 = [0.8, 0.4, 0, 0, 0];
TP2 = [0.6, 0.2, 0.5, 0.3, 0];
TP3 = [0.5, 0.6, 0.2, 0, 0];
TP4 = [0.3, 0.5, 0.4, 0.5, 0.1];

// Определяем нечеткие множества для симптомов
TS1 = [0.2, 0.8, 0, 0, 0];
TS2 = [0.7, 0.3, 0.6, 0.3, 0];
TS3 = [0.3, 0.5, 0.2, 0.6, 0];
TS4 = [0.4, 0.3, 0.8, 0.4, 0];

// Определяем нечеткие множества для диагнозов
TD1 = [0.1, 0.7, 0, 0.2, 0];
TD2 = [0.6, 0.3, 0.5, 0.3, 0];
TD3 = [0.4, 0.4, 0.3, 0.6, 0];
TD4 = [0.2, 0.2, 0.7, 0.3, 0.1];

// Максиминная композиция для отношения между пациентами и симптомами
for i = 1:4
    for j = 1:5
        R1(i,j) = min(TP(i,:), TS(j,:));
    end
end

// Максиминная композиция для отношения между симптомами и диагнозами
for i = 1:5
    for j = 1:5
        R2(i,j) = min(TS(:,i)', TD(:,j));
    end
end

// Max-prod композиция для отношения между пациентами и симптомами
for i = 1:4
    for j = 1:5
        R1_maxprod(i,j) = max(TP(i,:).*TS(j,:));
    end
end

// Max-prod композиция для отношения между симптомами и диагнозами
for i = 1:5
    for j = 1:5
        R2_maxprod(i,j) = max(TS(:,i)'.*TD(:,j));
    end
end

// Вывод результатов
disp("Максиминная композиция для отношения между пациентами и симптомами:");
disp(R1);

disp("Максиминная композиция

